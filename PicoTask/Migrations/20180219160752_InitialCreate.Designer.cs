// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PicoTask.Data;
using System;

namespace PicoTask.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20180219160752_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PicoTask.Data.TaskCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FullName");

                    b.Property<string>("Note");

                    b.Property<string>("RawAliases");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PicoTask.Data.TaskItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<DateTimeOffset?>("Deadline");

                    b.Property<bool>("IsArchived");

                    b.Property<bool>("IsDone");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("Note");

                    b.Property<string>("Place");

                    b.Property<string>("RawTitle");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("PicoTask.Data.TaskItemCategory", b =>
                {
                    b.Property<Guid>("TaskItemId");

                    b.Property<Guid>("TaskCategoryId");

                    b.HasKey("TaskItemId", "TaskCategoryId");

                    b.HasIndex("TaskCategoryId");

                    b.ToTable("TaskItemCategories");
                });

            modelBuilder.Entity("PicoTask.Data.TaskItemCategory", b =>
                {
                    b.HasOne("PicoTask.Data.TaskCategory", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PicoTask.Data.TaskItem", "Task")
                        .WithMany("Categories")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
